[{"/home/ravi/Documents/reactProjects/bg-web/src/index.js":"1","/home/ravi/Documents/reactProjects/bg-web/src/App.js":"2","/home/ravi/Documents/reactProjects/bg-web/src/reportWebVitals.js":"3","/home/ravi/Documents/reactProjects/bg-web/src/constants/index.js":"4","/home/ravi/Documents/reactProjects/bg-web/src/containers/BlogContainer/index.js":"5","/home/ravi/Documents/reactProjects/bg-web/src/containers/HomeContainer/index.js":"6","/home/ravi/Documents/reactProjects/bg-web/src/components/Footer/index.js":"7","/home/ravi/Documents/reactProjects/bg-web/src/components/Header/index.js":"8","/home/ravi/Documents/reactProjects/bg-web/src/constants/colors.js":"9","/home/ravi/Documents/reactProjects/bg-web/src/components/RoundBtn/index.js":"10","/home/ravi/Documents/reactProjects/bg-web/src/containers/ContactUsContainer/index.js":"11","/home/ravi/Documents/reactProjects/bg-web/src/containers/WisdomContainer/index.js":"12","/home/ravi/Documents/reactProjects/bg-web/src/components/Banner/index.js":"13","/home/ravi/Documents/reactProjects/bg-web/src/components/Input/index.js":"14","/home/ravi/Documents/reactProjects/bg-web/src/services/index.js":"15"},{"size":500,"mtime":1607014060414,"results":"16","hashOfConfig":"17"},{"size":1112,"mtime":1607154167756,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607014060414,"results":"19","hashOfConfig":"17"},{"size":155,"mtime":1607156005872,"results":"20","hashOfConfig":"17"},{"size":2384,"mtime":1607507162759,"results":"21","hashOfConfig":"17"},{"size":15129,"mtime":1607508354823,"results":"22","hashOfConfig":"17"},{"size":2126,"mtime":1607367093889,"results":"23","hashOfConfig":"17"},{"size":2330,"mtime":1607366399614,"results":"24","hashOfConfig":"17"},{"size":198,"mtime":1607247472248,"results":"25","hashOfConfig":"17"},{"size":2852,"mtime":1607508306163,"results":"26","hashOfConfig":"17"},{"size":2819,"mtime":1607514897268,"results":"27","hashOfConfig":"17"},{"size":16670,"mtime":1607514344620,"results":"28","hashOfConfig":"17"},{"size":681,"mtime":1607155119552,"results":"29","hashOfConfig":"17"},{"size":4245,"mtime":1607270583820,"results":"30","hashOfConfig":"17"},{"size":244,"mtime":1607509429750,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"bcq21s",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/ravi/Documents/reactProjects/bg-web/src/index.js",[],["68","69"],"/home/ravi/Documents/reactProjects/bg-web/src/App.js",[],"/home/ravi/Documents/reactProjects/bg-web/src/reportWebVitals.js",[],"/home/ravi/Documents/reactProjects/bg-web/src/constants/index.js",[],"/home/ravi/Documents/reactProjects/bg-web/src/containers/BlogContainer/index.js",[],"/home/ravi/Documents/reactProjects/bg-web/src/containers/HomeContainer/index.js",["70","71","72","73","74","75","76","77","78"],"import React from 'react';\nimport Header from '../../components/Header';\nimport bgEnglish from '../../assets/images/bg-english.png';\nimport COLORS from '../../constants/colors';\nimport QUOTES from '../../assets/data/quotes.json';\nimport TOPICS from '../../assets/data/topics.json';\nimport LEADERS from '../../assets/data/leaders.json';\nimport TESTIMONIALS from '../../assets/data/testimonials.json';\nimport RoundBtn from '../../components/RoundBtn';\nimport icon1 from '../../assets/images/job-interview.svg';\nimport icon2 from '../../assets/images/text.svg';\nimport icon3 from '../../assets/images/online-course.svg';\nimport icon4 from '../../assets/images/mentor.svg';\nimport icon5 from '../../assets/images/firework.svg';\nimport { ROUTE } from '../../constants';\nimport { subscribe } from '../../services';\nimport './style.scss';\n\nclass HomeContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentQuote: 0,\n            currentSlug: TOPICS[0].slug,\n            currentLeader: 0,\n            currentTest: 0,\n            subscribeForm: {\n                name: '',\n                email: '',\n                contact: '',\n            },\n        }\n        this.q_interval = '';\n        this.l_interval = '';\n        this.quoteRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.q_interval = setInterval(() => {\n            const {\n                currentQuote,\n                currentTest,\n            } = this.state;\n            this.setState({\n                opacity: 0,\n            }, () => {\n                setTimeout(() => {\n                    this.setState({\n                        currentQuote: (currentQuote + 1) % (QUOTES.length),\n                        currentTest: (currentTest + 1) % (TESTIMONIALS.length),\n                    }, () => {\n                        setTimeout(() => {\n                            this.setState({\n                                opacity: 1,\n                            })\n                        }, 1000);\n                    })\n                }, 2000);\n            })\n        }, 10000);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.q_interval);\n    }\n\n    setCurrentSlug = (slug) => {\n        this.setState({\n            currentSlug: slug,\n        });\n    }\n\n    subscribe = () => {\n        const {\n            subscribeForm,\n        } = this.state;\n        if (subscribeForm && subscribeForm.name && subscribeForm.email && subscribeForm.contact) {\n            subscribe({\n                timeStamp: new Date(),\n                ...subscribeForm,\n            }).then((res) => {\n                this.setState({\n                    subscribeForm: {\n                        name: '',\n                        email: '',\n                        contact: '',\n                    }\n                })\n            }).catch(err => {\n                console.log(err);\n            })\n        }\n    }\n\n    render() {\n        const {\n            opacity,\n            currentQuote,\n            currentSlug,\n            currentTest,\n            subscribeForm,\n        } = this.state;\n        const {\n            history\n        } = this.props;\n        return (\n            <React.Fragment>\n                <Header navLinks={[\n                    { label: 'Let\\'s talk Practical', path: '#practical-section' },\n                    { label: 'What Leaders say?', path: '#leader-section' },\n                    { label: 'Wisdom Batch', path: '#wisdom-section' },\n                    { label: 'Testimonials', path: '#testimonials' },\n                ]} />\n                <div className=\"home-container\">\n                    <div className=\"banner\">\n                        <div>\n                            <div className=\"quote-container\" style={{ opacity }}>\n                                <p className=\"text\">{QUOTES[currentQuote].text}</p>\n                                <span className=\"author\">{QUOTES[currentQuote].author}</span>\n                            </div>\n                            <div className=\"indicator\">\n                                {QUOTES.map((_, index) => <span\n                                    className=\"bullet\"\n                                    style={{ color: `${index === currentQuote ? COLORS.WHITE : COLORS.GREY}` }}\n                                >â€¢</span>)}\n                            </div>\n                        </div>\n                        <img className=\"bg-img\" src={bgEnglish} />\n                    </div>\n                    <div id=\"practical-section\">\n                        <div className=\"heading\">Let's talk <span className=\"bold\">Practical</span></div>\n                        <ul className=\"topic-container\">\n                            {\n                                TOPICS.map(topic => (\n                                    <li key={topic.slug} className=\"topic\">\n                                        <RoundBtn\n                                            className=\"btn\"\n                                            hoverBgColor={COLORS.YELLOW}\n                                            bgColor={topic.slug === currentSlug ? COLORS.YELLOW : COLORS.DARK}\n                                            onClick={() => this.setCurrentSlug(topic.slug)}\n                                        >\n                                            {topic.label}\n                                        </RoundBtn>\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                        <p className=\"intro\">\n                            {TOPICS.find(topic => topic.slug === currentSlug).intro}\n                        </p>\n                        <div className=\"btn-group\">\n                            <RoundBtn\n                                className=\"btn\"\n                                hoverBgColor={COLORS.YELLOW}\n                                bgColor={COLORS.DARK}\n                                onClick={() => history.push(`/blog/${currentSlug}`)}\n                                outlinePt={2}\n                                outlineColor={COLORS.DARK}\n                                hoverOutline={COLORS.YELLOW}\n                            >\n                                Read more about {TOPICS.find(topic => topic.slug === currentSlug).label}\n                            </RoundBtn>\n                            <RoundBtn\n                                className=\"btn\"\n                                outlineColor={COLORS.DARK}\n                                outlinePt={2}\n                                hoverBgColor={COLORS.DARK}\n                                bgColor={COLORS.WHITE}\n                                textColor={COLORS.DARK}\n                                hoverTextColor={COLORS.WHITE}\n                                onClick={() => history.push(ROUTE.CONTACT_US)}\n                            >\n                                Speak up\n                            </RoundBtn>\n                        </div>\n                    </div>\n                    <div id=\"leader-section\">\n                        <div className=\"heading\">\n                            What <span className=\"bold\">Leaders</span> say?\n                        </div>\n                        <div className=\"leader-container\" style={{ opacity }}>\n                            <img src={LEADERS[currentQuote].image} />\n                            <div className=\"quote-container\">\n                                <p className=\"quote\">{LEADERS[currentQuote].saying}</p>\n                                <span className=\"author\">{LEADERS[currentQuote].name}</span>\n                                <span className=\"desig\">{LEADERS[currentQuote].desig}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div id=\"wisdom-section\">\n                        <img className=\"banner\" src=\"https://res.cloudinary.com/dnuq1lgqs/image/upload/v1607116475/bg/Screenshot_from_2020-12-02_14-57-05_1_tfbbsj.png\" />\n                        <div className=\"header\">\n                            <div className=\"heading\">\n                                <span className=\"bold\">Wisdom Batch</span> '21\n                            </div>\n                            <div className=\"subheading\">\n                                Enroll to manage your life in a better sense!\n                            </div>\n                            <div className=\"quote\">\n                                â€œIf they read all these books and if they are trained up in their character, then they will be, in future, first-class men.\n                            </div>\n                            <div className=\"author\">Srila Prabhupada</div>\n                        </div>\n                        <div className=\"row-1\">\n                            <div className=\"card\">\n                                <div className=\"img-wrapper\">\n                                    <img src={icon1} />\n                                </div>\n                                <div className=\"text\">\n                                    Online Live Sessions\n                                    on Life Challenges &amp;\n                                    Practical Solutions\n                                    from Bhagavad Gita\n                                </div>\n                            </div>\n                            <div className=\"card\">\n                                <div className=\"img-wrapper\">\n                                    <img src={icon2} />\n                                </div>\n                                <div className=\"text\">\n                                    Regular articles\n                                    on Life Building\n                                </div>\n                            </div>\n                            <div className=\"card\">\n                                <div className=\"img-wrapper\">\n                                    <img src={icon3} />\n                                </div>\n                                <div className=\"text\">\n                                    Self paced\n                                    Life Manual Course\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row-2\">\n                            <div className=\"card\">\n                                <div className=\"img-wrapper\">\n                                    <img src={icon4} />\n                                </div>\n                                <div className=\"text\">\n                                    Individual\n                                    life mentorship\n                                </div>\n                            </div>\n                            <div className=\"card\">\n                                <div className=\"img-wrapper\">\n                                    <img src={icon5} />\n                                </div>\n                                <div className=\"text\">\n                                    Mega Youth Festival\n                                    2021\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"btn-group\">\n                            <RoundBtn\n                                className=\"btn\"\n                                hoverBgColor={COLORS.YELLOW}\n                                bgColor={COLORS.DARK}\n                                onClick={() => history.push(ROUTE.WISDOM_BATCH)}\n                                outlinePt={2}\n                                outlineColor={COLORS.DARK}\n                                hoverOutline={COLORS.YELLOW}\n                            >\n                                Know more\n                            </RoundBtn>\n                            <RoundBtn\n                                className=\"btn\"\n                                outlineColor={COLORS.DARK}\n                                outlinePt={2}\n                                hoverBgColor={COLORS.DARK}\n                                bgColor={COLORS.WHITE}\n                                textColor={COLORS.DARK}\n                                hoverTextColor={COLORS.WHITE}\n                                onClick={() => history.push(ROUTE.CONTACT_US)}\n                            >\n                                Send me quotes\n                            </RoundBtn>\n                        </div>\n                    </div>\n                    <div id=\"testimonials\">\n                        <div className=\"heading bold\">Testimonials</div>\n                        <div className=\"subheading\">Transformations gone real!</div>\n                        <div className=\"test-container\" style={{ opacity }}>\n                            <img src={TESTIMONIALS[currentTest].image} />\n                            <div className=\"quote-container\">\n                                <p className=\"quote\">{TESTIMONIALS[currentTest].saying}</p>\n                                <span className=\"author\">{TESTIMONIALS[currentTest].name}</span>\n                                <span className=\"desig\">{TESTIMONIALS[currentTest].desig}</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"action-footer\">\n                    <div className=\"message\">Get our updates delivered right into your Inbox</div>\n                    <div className=\"subscribe-form\">\n                        <input\n                            placeholder=\"Name\"\n                            value={subscribeForm.name}\n                            onChange={(e) => this.setState({\n                                subscribeForm: {\n                                    ...subscribeForm,\n                                    name: e.target.value\n                                }\n                            })}\n                        />\n                        <input\n                            placeholder=\"Email\"\n                            value={subscribeForm.email}\n                            onChange={(e) => this.setState({\n                                subscribeForm: {\n                                    ...subscribeForm,\n                                    email: e.target.value\n                                }\n                            })}\n                        />\n                        <input\n                            placeholder=\"Contact\"\n                            value={subscribeForm.contact}\n                            onChange={(e) => this.setState({\n                                subscribeForm: {\n                                    ...subscribeForm,\n                                    contact: e.target.value\n                                }\n                            })}\n                        />\n                        <button onClick={this.subscribe}>Subscribe</button>\n                    </div>\n                </div>\n            </React.Fragment >\n        )\n    }\n}\n\nexport default HomeContainer;","/home/ravi/Documents/reactProjects/bg-web/src/components/Footer/index.js",["79","80","81","82","83","84","85","86"],"import React from 'react';\nimport './style.scss';\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"footer-container\">\n                <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d347.6031851377908!2d77.45069463463751!3d28.682340188566755!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x390cf199a672e86f%3A0x93b6a8443203ee20!2sISKCON%20Temple%2C%20Ghaziabad!5e0!3m2!1sen!2sin!4v1607361543505!5m2!1sen!2sin\" width=\"400\" height=\"300\" frameborder=\"0\" style={{ border: '0' }} allowfullscreen=\"\" aria-hidden=\"false\" tabindex=\"0\"></iframe>\n                <div className=\"content\">\n                    <div className=\"link-container\">\n                        <div className=\"links\">\n                            <a href=\"https://t.me/IYFGhaziabad\" target=\"_blank\">Connect to Krishna</a>\n                            <a href=\"https://www.facebook.com/media/set/?vanity=IYFGhaziabad&set=a.128262368703002\" target=\"_blank\">Mega Youth Fest 2020</a>\n                            <a href=\"https://udgaar.in/\" target=\"_blank\">UDGAAR Fest 2019</a>\n                            <a href=\"/about\" target=\"_blank\">About Us</a>\n                            <a href=\"/contact-us\" target=\"_blank\">Contact Us</a>\n                            <a href=\"/privacy\" target=\"_blank\">Privacy Policy</a>\n                        </div>\n                        <div className=\"links\">\n                            <a href=\"https://www.facebook.com/IYFGhaziabad\" target=\"_blank\">Facebook</a>\n                            <a href=\"https://t.me/IYFGhaziabad\" target=\"_blank\">Telegram</a>\n                            <a href=\"https://chat.whatsapp.com/JTvafXN6Xto9cgFXdFGkzz\" target=\"_blank\">Whatsapp</a>\n                            <a href=\"mailto:iskconyouthforumghaziabad@gmail.com\" target=\"_blank\">Email</a>\n                        </div>\n                    </div>\n                    <div className=\"copyright\">\n                        &copy; ISKCON YOUTH FORUM GHAZIABAD 2020\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Footer;","/home/ravi/Documents/reactProjects/bg-web/src/components/Header/index.js",["87"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/images/iyf-logo.png';\nimport { ROUTE } from '../../constants';\nimport './style.scss';\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nightify: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScrollToElement);\n        this.handleScrollToElement();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScrollToElement);\n    }\n\n    handleScrollToElement = () => {\n        const {\n            nightify\n        } = this.state;\n        const banner = document.getElementById('banner-container');\n        const bannerHeight = (banner && banner.offsetHeight) || 0;\n        if (window.scrollY > bannerHeight && !nightify) {\n            this.setState({\n                nightify: true\n            })\n        } else if (window.scrollY <= bannerHeight && nightify) {\n            this.setState({\n                nightify: false,\n            })\n        }\n    };\n\n    render() {\n        const {\n            nightify,\n        } = this.state;\n        const {\n            bgColor,\n            navLinks,\n        } = this.props;\n        return (\n            <div className={`header-container ${nightify ? 'nightify' : ''}`}\n                style={{ backgroundColor: bgColor }}\n            >\n                <Link to={ROUTE.HOME}><img className=\"logo\" src={logo} /></Link>\n                <ul className=\"nav-bar\">\n                    {\n                        navLinks.map((link) => (\n                            <li><a href={link.path}>{link.label}</a></li>\n                        ))\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nHeader.propTypes = {\n    navLinks: PropTypes.array\n};\n\nHeader.defaultProps = {\n    navLinks: [\n        { label: 'Let\\'s talk Practical', path: `${window.location.origin}#practical-section` },\n        { label: 'What Leaders say?', path: `${window.location.origin}#leader-section` },\n        { label: 'Wisdom Batch', path: `${window.location.origin}#wisdom-section` },\n        { label: 'Testimonials', path: `${window.location.origin}#testimonials` },\n    ]\n}\n\nexport default Header;","/home/ravi/Documents/reactProjects/bg-web/src/constants/colors.js",[],"/home/ravi/Documents/reactProjects/bg-web/src/components/RoundBtn/index.js",["88","89","90"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport COLORS from '../../constants/colors';\nimport './style.scss';\n\nclass RoundBtn extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            textColor,\n            bgColor,\n            hoverBgColor,\n            hoverTextColor,\n            outlineColor,\n            outlinePt,\n        } = this.props;\n        this.state = {\n            textColor,\n            bgColor,\n            outlineColor,\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {\n            bgColor,\n            textColor,\n        } = this.props;\n        if (prevProps.bgColor !== bgColor || prevProps.textColor !== textColor) {\n            this.setState({\n                bgColor,\n                textColor\n            })\n        }\n    }\n\n    onMouseEnter = () => {\n        const {\n            hoverTextColor,\n            hoverBgColor,\n            hoverOutline,\n        } = this.props;\n        const changed = {};\n        if (hoverBgColor) {\n            changed.bgColor = hoverBgColor;\n        }\n        if (hoverTextColor) {\n            changed.textColor = hoverTextColor;\n        }\n        if (hoverOutline) {\n            changed.outlineColor = hoverOutline;\n        }\n        this.setState(changed);\n    }\n\n    onMouseLeave = () => {\n        const {\n            textColor,\n            bgColor,\n            outlineColor,\n        } = this.props;\n        this.setState({\n            textColor,\n            bgColor,\n            outlineColor,\n        });\n    }\n\n    render() {\n        const {\n            className,\n            children,\n            outlinePt,\n            onClick,\n        } = this.props;\n        const {\n            bgColor,\n            textColor,\n            outlineColor,\n        } = this.state;\n        return (\n            <button\n                onClick={onClick}\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n                className={`${className} round-btn`}\n                style={{\n                    backgroundColor: bgColor,\n                    color: textColor,\n                    border: `${outlinePt}px solid ${outlineColor}`\n                }}\n            >\n                {children}\n            </button>\n        )\n    }\n}\n\nRoundBtn.propTypes = {\n    className: PropTypes.string,\n    children: PropTypes.any,\n    textColor: PropTypes.string,\n    bgColor: PropTypes.string,\n    hoverBgColor: PropTypes.string,\n    hoverTextColor: PropTypes.string,\n    outlineColor: PropTypes.string,\n    outlinePt: PropTypes.number,\n}\n\nRoundBtn.defaultProps = {\n    className: '',\n    children: null,\n    textColor: COLORS.WHITE,\n    bgColor: COLORS.DARK,\n    hoverBgColor: '',\n    hoverTextColor: '',\n    outlineColor: COLORS.DARK,\n    outlinePt: 0,\n}\n\nexport default RoundBtn;","/home/ravi/Documents/reactProjects/bg-web/src/containers/ContactUsContainer/index.js",[],"/home/ravi/Documents/reactProjects/bg-web/src/containers/WisdomContainer/index.js",["91","92","93","94","95","96"],"/home/ravi/Documents/reactProjects/bg-web/src/components/Banner/index.js",[],"/home/ravi/Documents/reactProjects/bg-web/src/components/Input/index.js",["97","98"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.scss'\nimport COLORS from '../../constants/colors';\nimport { placeholder } from '@babel/types';\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            borderColor: COLORS.DARK,\n        }\n    }\n    onFocusIn = () => {\n        this.setState({\n            borderColor: COLORS.BLACK,\n        })\n    }\n\n    onFocusOut = () => {\n        if (this.checkTests()) {\n            //somethhing error\n            this.setState({\n                borderColor: COLORS.RED\n            });\n        } else {\n            this.setState({\n                borderColor: COLORS.DARK\n            })\n        }\n    }\n\n    checkTests = () => {\n        const {\n            required,\n            test,\n            value,\n        } = this.props;\n        if (required && !value) {\n            return true;\n        } else if (test) {\n            console.log(test, test.test(value), value)\n            return !test.test(value);\n        }\n        return false;\n    }\n    render() {\n        const {\n            value,\n            setValue,\n            required,\n            className,\n            name,\n            placeholder,\n            type,\n            options,\n            maxlength,\n        } = this.props;\n        const {\n            borderColor\n        } = this.state;\n        return (\n            <React.Fragment>\n                {type === 'select' && (\n                    <select\n                        className={`input-container ${className ? className : ''}`}\n                        style={{ borderColor }}\n                        name={name}\n                        value={value}\n                        onFocus={this.onFocusIn}\n                        onBlur={this.onFocusOut}\n                        placeholder={placeholder}\n                        onChange={(e) => setValue(name, e.target.value)}\n                    >\n                        {options.map(opt => {\n                            return (\n                                <option value={typeof (opt) === 'string' ? opt : opt.value}>\n                                    {typeof (opt) === 'string' ? opt : opt.label}\n                                </option>\n                            )\n                        })}\n                    </select>\n                )}\n                {(type === 'text' || type === 'date' || type === 'number') && (\n                    <input\n                        className={`input-container ${className ? className : ''}`}\n                        style={{ borderColor }}\n                        name={name}\n                        value={value}\n                        onFocus={this.onFocusIn}\n                        onBlur={this.onFocusOut}\n                        placeholder={placeholder}\n                        onChange={(e) => setValue(name, e.target.value)}\n                        maxlength={maxlength}\n                        type={type}\n                    />\n                )}\n                {(type === 'radio') && (\n                    <div className=\"radio\">\n                        {\n                            options.map((option, index) => (\n                                <div className={className}>\n                                    <input\n                                        className={`input-container`}\n                                        name={name}\n                                        value={option}\n                                        onChange={(e) => setValue(name, e.target.value)}\n                                        type={type}\n                                        checked={option === value}\n                                    />\n                                    <label for={name}>{option}</label>\n                                </div>\n                            ))\n                        }\n                    </div>\n                )}\n                {(type === 'file') && (\n                    <button id=\"upload_widget\" class=\"cloudinary-button\">Upload files</button>\n                )}\n            </React.Fragment>\n\n        )\n    }\n}\n\nInput.propTypes = {\n    type: PropTypes.string,\n};\n\nInput.defaultProps = {\n    type: 'text',\n}\n\nexport default Input;","/home/ravi/Documents/reactProjects/bg-web/src/services/index.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":128,"column":25,"nodeType":"105","endLine":128,"endColumn":67},{"ruleId":"103","severity":1,"message":"104","line":182,"column":29,"nodeType":"105","endLine":182,"endColumn":70},{"ruleId":"103","severity":1,"message":"104","line":191,"column":25,"nodeType":"105","endLine":191,"endColumn":171},{"ruleId":"103","severity":1,"message":"104","line":207,"column":37,"nodeType":"105","endLine":207,"endColumn":56},{"ruleId":"103","severity":1,"message":"104","line":218,"column":37,"nodeType":"105","endLine":218,"endColumn":56},{"ruleId":"103","severity":1,"message":"104","line":227,"column":37,"nodeType":"105","endLine":227,"endColumn":56},{"ruleId":"103","severity":1,"message":"104","line":238,"column":37,"nodeType":"105","endLine":238,"endColumn":56},{"ruleId":"103","severity":1,"message":"104","line":247,"column":37,"nodeType":"105","endLine":247,"endColumn":56},{"ruleId":"103","severity":1,"message":"104","line":285,"column":29,"nodeType":"105","endLine":285,"endColumn":74},{"ruleId":"106","severity":1,"message":"107","line":8,"column":17,"nodeType":"105","endLine":8,"endColumn":432},{"ruleId":"108","severity":1,"message":"109","line":12,"column":65,"nodeType":"110","endLine":12,"endColumn":80},{"ruleId":"108","severity":1,"message":"109","line":13,"column":117,"nodeType":"110","endLine":13,"endColumn":132},{"ruleId":"108","severity":1,"message":"109","line":14,"column":58,"nodeType":"110","endLine":14,"endColumn":73},{"ruleId":"108","severity":1,"message":"109","line":20,"column":77,"nodeType":"110","endLine":20,"endColumn":92},{"ruleId":"108","severity":1,"message":"109","line":21,"column":65,"nodeType":"110","endLine":21,"endColumn":80},{"ruleId":"108","severity":1,"message":"109","line":22,"column":88,"nodeType":"110","endLine":22,"endColumn":103},{"ruleId":"108","severity":1,"message":"109","line":23,"column":82,"nodeType":"110","endLine":23,"endColumn":97},{"ruleId":"103","severity":1,"message":"104","line":54,"column":39,"nodeType":"105","endLine":54,"endColumn":74},{"ruleId":"111","severity":1,"message":"112","line":12,"column":13,"nodeType":"113","messageId":"114","endLine":12,"endColumn":25},{"ruleId":"111","severity":1,"message":"115","line":13,"column":13,"nodeType":"113","messageId":"114","endLine":13,"endColumn":27},{"ruleId":"111","severity":1,"message":"116","line":15,"column":13,"nodeType":"113","messageId":"114","endLine":15,"endColumn":22},{"ruleId":"103","severity":1,"message":"104","line":127,"column":29,"nodeType":"105","endLine":127,"endColumn":52},{"ruleId":"103","severity":1,"message":"104","line":134,"column":29,"nodeType":"105","endLine":134,"endColumn":54},{"ruleId":"103","severity":1,"message":"104","line":141,"column":29,"nodeType":"105","endLine":141,"endColumn":47},{"ruleId":"103","severity":1,"message":"104","line":148,"column":29,"nodeType":"105","endLine":148,"endColumn":47},{"ruleId":"106","severity":1,"message":"107","line":158,"column":21,"nodeType":"105","endLine":158,"endColumn":240},{"ruleId":"103","severity":1,"message":"104","line":200,"column":29,"nodeType":"105","endLine":200,"endColumn":124},{"ruleId":"111","severity":1,"message":"117","line":5,"column":10,"nodeType":"113","messageId":"114","endLine":5,"endColumn":21},{"ruleId":"111","severity":1,"message":"118","line":51,"column":13,"nodeType":"113","messageId":"114","endLine":51,"endColumn":21},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'hoverBgColor' is assigned a value but never used.","Identifier","unusedVar","'hoverTextColor' is assigned a value but never used.","'outlinePt' is assigned a value but never used.","'placeholder' is defined but never used.","'required' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]